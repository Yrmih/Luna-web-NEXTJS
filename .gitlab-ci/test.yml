.test_common:
  stage: test
  tags:
    - ssh
    - luna
  script:
    - env > .env.production
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - if [ "${NEXT_OUTPUT}" = "standalone" ]; then 
        docker compose -f docker-compose.build.test.yml build --no-cache luna-test;
        docker compose -f docker-compose.build.test.yml run --rm luna-test;
      else
        docker-compose -f docker-compose.test.yml pull luna-test;
        docker compose -f docker-compose.test.yml run --rm luna-test;
      fi

test_production:
  dependencies:
    - build_production
  extends: 
    - .test_common
  environment:
    name: prod
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables:
        DOCKER_IMAGE_TAG: "latest"

test_homolog:
  dependencies:
    - build_homolog
  extends: 
    - .test_common
  environment:
    name: homol
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: '$CI_COMMIT_BRANCH == "homologacao"'
      variables:
          DOCKER_IMAGE_TAG: "homologacao"

test_staging:
  dependencies:
    - build_staging
  extends: 
    - .test_common
  environment:
    name: staging
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: '$CI_COMMIT_BRANCH != "homologacao" && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH'
      variables:
          DOCKER_IMAGE_TAG: "staging"